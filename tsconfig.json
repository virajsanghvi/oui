{
  "extends": ["@tsconfig/node20"],
  "compilerOptions": {
    "baseUrl": ".",
    "rootDir": "src",
    "outDir": "./dist",
    "sourceMap": true,

    // generate declaration files
    "declaration": true,
    "declarationMap": true,

    // re-use info from previous runs to improve performance
    //"incremental": true,

    // don't allow un-used variables
    "noUnusedLocals": true,

    // Enables all strict type checking options.
    "strict": true,

    // Output as ES Modules & esnext code, webpack will handle further conversion
    "module": "esnext",
    "target": "esnext",

    // Allows default imports from modules with no default export. This does not affect code emit, just type checking.
    // We have to enable this option explicitly since `esModuleInterop` doesn't enable it automatically when ES2015 or
    // ESNext module format is used.
    "allowSyntheticDefaultImports": true,

    // Support .tsx files and transform JSX into calls to React.createElement
    "jsx": "react-jsx",

    // Emits __importStar and __importDefault helpers for runtime babel ecosystem compatibility.
    "esModuleInterop": true,

    // Resolve modules in the same way as Node.js. Aka make `require` works the
    // same in TypeScript as it does in Node.js.
    "moduleResolution": "node",

    // Disallow inconsistently-cased references to the same file.
    "forceConsistentCasingInFileNames": true,

    "paths": {
      "@/*": ["./src/*"]
    },

    // enables "core language features"
    "lib": [
      // ESNext auto includes previous versions all the way back to es5
      "esnext",
      // includes support for browser APIs
      "dom"
    ]
  },
  "include": ["src"]
}
